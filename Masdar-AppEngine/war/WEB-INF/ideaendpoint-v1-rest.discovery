{
 "kind": "discovery#restDescription",
 "etag": "\"ykhqEJ_LDFBNzs2RnXtIc2-QyAc/G9T-JBYFfbYL0-H2gvKqvGF8wBM\"",
 "discoveryVersion": "v1",
 "id": "ideaendpoint:v1",
 "name": "ideaendpoint",
 "version": "v1",
 "description": "This is an API",
 "ownerDomain": "masdar.com",
 "ownerName": "masdar.com",
 "packagePath": "entities",
 "icons": {
  "x16": "http://www.google.com/images/icons/product/search-16.gif",
  "x32": "http://www.google.com/images/icons/product/search-32.gif"
 },
 "protocol": "rest",
 "baseUrl": "https://masdarengine.appspot.com/_ah/api/ideaendpoint/v1/",
 "basePath": "/_ah/api/ideaendpoint/v1/",
 "rootUrl": "https://masdarengine.appspot.com/_ah/api/",
 "servicePath": "ideaendpoint/v1/",
 "batchPath": "batch",
 "parameters": {
  "alt": {
   "type": "string",
   "description": "Data format for the response.",
   "default": "json",
   "enum": [
    "json"
   ],
   "enumDescriptions": [
    "Responses with Content-Type of application/json"
   ],
   "location": "query"
  },
  "fields": {
   "type": "string",
   "description": "Selector specifying which fields to include in a partial response.",
   "location": "query"
  },
  "key": {
   "type": "string",
   "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
   "location": "query"
  },
  "oauth_token": {
   "type": "string",
   "description": "OAuth 2.0 token for the current user.",
   "location": "query"
  },
  "prettyPrint": {
   "type": "boolean",
   "description": "Returns response with indentations and line breaks.",
   "default": "true",
   "location": "query"
  },
  "quotaUser": {
   "type": "string",
   "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
   "location": "query"
  },
  "userIp": {
   "type": "string",
   "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
   "location": "query"
  }
 },
 "schemas": {
  "CollectionResponse_Idea": {
   "id": "CollectionResponse_Idea",
   "type": "object",
   "properties": {
    "items": {
     "type": "array",
     "items": {
      "$ref": "Idea"
     }
    },
    "nextPageToken": {
     "type": "string"
    }
   }
  },
  "Idea": {
   "id": "Idea",
   "type": "object",
   "properties": {
    "idea_blob_key": {
     "type": "string"
    },
    "idea_header": {
     "type": "string"
    },
    "idea_id": {
     "type": "string",
     "format": "int64"
    },
    "idea_type": {
     "type": "integer",
     "format": "int32"
    },
    "user_id": {
     "type": "string",
     "format": "int64"
    },
    "voting_number": {
     "type": "string",
     "format": "int64"
    }
   }
  },
  "TransactionResponse": {
   "id": "TransactionResponse",
   "type": "object",
   "properties": {
    "errMessage": {
     "type": "string"
    },
    "valid": {
     "type": "boolean"
    }
   }
  }
 },
 "methods": {
  "getIdea": {
   "id": "ideaendpoint.getIdea",
   "path": "idea/{id}",
   "httpMethod": "GET",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ],
   "response": {
    "$ref": "Idea"
   }
  },
  "insertIdea": {
   "id": "ideaendpoint.insertIdea",
   "path": "idea",
   "httpMethod": "POST",
   "request": {
    "$ref": "Idea",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Idea"
   }
  },
  "insertSocialIdea": {
   "id": "ideaendpoint.insertSocialIdea",
   "path": "idea/{usersIds}",
   "httpMethod": "POST",
   "parameters": {
    "usersIds": {
     "type": "string",
     "required": true,
     "location": "path"
    }
   },
   "parameterOrder": [
    "usersIds"
   ],
   "request": {
    "$ref": "Idea",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Idea"
   }
  },
  "listIdea": {
   "id": "ideaendpoint.listIdea",
   "path": "idea",
   "httpMethod": "GET",
   "parameters": {
    "cursor": {
     "type": "string",
     "location": "query"
    },
    "limit": {
     "type": "integer",
     "format": "int32",
     "location": "query"
    }
   },
   "response": {
    "$ref": "CollectionResponse_Idea"
   }
  },
  "removeIdea": {
   "id": "ideaendpoint.removeIdea",
   "path": "idea/{id}",
   "httpMethod": "DELETE",
   "parameters": {
    "id": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "id"
   ]
  },
  "updateIdea": {
   "id": "ideaendpoint.updateIdea",
   "path": "idea",
   "httpMethod": "PUT",
   "request": {
    "$ref": "Idea",
    "parameterName": "resource"
   },
   "response": {
    "$ref": "Idea"
   }
  },
  "voteDown": {
   "id": "ideaendpoint.voteDown",
   "path": "voteDown/{ideaId}/{userId}",
   "httpMethod": "POST",
   "parameters": {
    "ideaId": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    },
    "userId": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "ideaId",
    "userId"
   ],
   "response": {
    "$ref": "TransactionResponse"
   }
  },
  "voteUp": {
   "id": "ideaendpoint.voteUp",
   "path": "voteUp/{ideaId}/{userId}",
   "httpMethod": "POST",
   "parameters": {
    "ideaId": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    },
    "userId": {
     "type": "string",
     "required": true,
     "format": "int64",
     "location": "path"
    }
   },
   "parameterOrder": [
    "ideaId",
    "userId"
   ],
   "response": {
    "$ref": "TransactionResponse"
   }
  }
 }
}
